给定两个大小为 m 和 n 的有序数组 nums1 和 nums2。
请你找出这两个有序数组的中位数，并且要求算法的时间复杂度为 O(log(m + n))。
你可以假设 nums1 和 nums2 不会同时为空
解析  :将两个数组中的值放到一个数组中找到中位数

    double findMedianSortedArrays(vector<int>& nums1, vector<int>& nums2) {
        int len=nums1.size()+nums2.size();
        int *a=new int[len];
        int i=0,j=0,k=0;
        while(i<nums1.size()||j<nums2.size()){
            if(nums1.size()<=i){
                a[k++]=nums2.at(j++);
                continue;
            }
            if(nums2.size()<=j){
                a[k++]=nums1.at(i++);
                continue;
            }
            a[k++] =(nums1.at(i)<=nums2.at(j) ? nums1.at(i++):nums2.at(j++));            
        }
        
        return len%2==0 ? (a[len/2-1]+a[len/2])/(double)2:a[len/2];       
        
    }
