给出两个 非空 的链表用来表示两个非负的整数。其中，它们各自的位数是按照 逆序 的方式存储的，并且它们的每个节点只能存储 一位 数字。

如果，我们将这两个数相加起来，则会返回一个新的链表来表示它们的和。

您可以假设除了数字 0 之外，这两个数都不会以 0 开头。

    int carry=0;
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        if(l1==NULL&&l2!=NULL){
            ListNode* newNode=new ListNode((l2->val+carry)%10);
            carry=(l2->val+carry)/10;
            newNode->next= addTwoNumbers(NULL,l2->next);
            return newNode;
        }     
        if(l2==NULL&&l1!=NULL){
            ListNode* newNode=new ListNode((l1->val+carry)%10);
            carry=(l1->val+carry)/10;
            newNode->next=addTwoNumbers(l1->next,NULL);
            return newNode;
        }
        if(l1==NULL&&l2==NULL&&carry==0){
            return NULL;
        }
        if(l1==NULL&&l2==NULL&&carry!=0){
            return new ListNode(1);
        }
        ListNode* newNode=new ListNode((l1->val+l2->val+carry)%10);
        carry=(l1->val+l2->val+carry)/10;
        newNode->next=addTwoNumbers(l1->next,l2->next);

        return newNode;
    }
