c++ 击败100%的思路与代码
解题思路:
    从后向前遍历, 当 当前值为a, 后面的值比a大, 则将a位置之后的数排序,  再找刚好大于a的值
  代码:
  class Solution {
public:
    void sort(vector<int>& nums, int left, int right) {
        for (int i = 0; i < (right - left); i++)
            for (int j = left; j < right; j ++) {
                if (nums[j] > nums[j + 1]) {
                    nums[j] = nums[j] ^ nums[j + 1];
                    nums[j + 1] = nums[j] ^ nums[j + 1];
                    nums[j] = nums[j] ^ nums[j + 1];
                }
            }
    }

    void nextPermutation(vector<int>& nums) {
        //从后向前找   如果当前值位a 后面的值比a大  则将a后面排序, 寻找刚好比a大的值
        for (int i = nums.size() - 1; i > 0; i--) {
            if (nums[i] > nums[i - 1]) {
                sort(nums, i, nums.size() - 1);
                for (int j = i; j < nums.size(); j ++) {
                    if (nums[j] > nums[i - 1]) {
                        nums[j] = nums[j] ^ nums[i - 1];
                        nums[i - 1] = nums[j] ^ nums[i - 1];
                        nums[j] = nums[j] ^ nums[i - 1];
                        break;
                    }
                }
                return;
            }
        }
        return ::sort(nums.begin(), nums.end());
    }
};
